imports:
  - {resource: packages/api_platform/filters/*}

parameters:
  locale: 'en'

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    public: false       # Allows optimizing the container by removing unused services; this also means
    # fetching services directly from the container via $container->get() won't work.
    # The best practice is to be explicit about your dependencies anyway.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/*'
    exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\:
    resource: '../src/Controller'
    tags: ['controller.service_arguments']

  App\Filter\Author\Fullname:
    bind:
      $requestStack: '@request_stack'

  App\Filter\Book\AuthorFullName:
    bind:
      $requestStack: '@request_stack'

  app.security.provider.user:
    class: App\Security\Provider\UserProvider
    arguments: ['@doctrine.orm.entity_manager', App\Entity\User]

  app.event_listener.book_notation_request_received_listener:
    class: App\EventListener\BookNotationRequestReceivedListener
    tags:
      - {name: kernel.event_listener, event: kernel.view, priority: 65}
