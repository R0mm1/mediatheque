version: "3.7"
services:
  nginx:
    image: nginx:1.15.3-alpine
    restart: on-failure
    depends_on:
      - php
    volumes:
      - ../public/:/usr/src/app
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - ${NGINX_EXPOSED_PORT}:80

  db:
    container_name: ${COMPOSE_PROJECT_NAME}_db
    restart: on-failure
    build:
      context: ./mysql
      args:
        - MYSQL_CONTAINER_USER=${MYSQL_CONTAINER_USER}
        - MYSQL_CONTAINER_GROUP=${MYSQL_CONTAINER_GROUP}
    volumes:
      - ./logs/mysql:${MYSQL_LOG_DIR}
      - ./database:${MYSQL_DATA_DIR}
      - ./mysql/config.cnf:${MYSQL_CONF_FILE}
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    entrypoint: ""
    command: bash -c "chown -R mysql:mysql /var/log/mysql && exec /entrypoint.sh mysqld"

  php:
    build:
      context: .
      dockerfile: ./php/Dockerfile
    restart: on-failure
    env_file:
      - .env
    user: 1000:1000
    volumes:
      - ../:/usr/src/app

  composer:
    image: composer
    volumes:
      - "../:/composer"
    container_name: composer
    working_dir: /composer
    command: install

  node:
    build: ./node
    volumes:
      - "../:/node"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_PORT: 3306
      PMA_HOST: db
      PMA_USER: ${MYSQL_ROOT_USER}
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - ${PMA_EXPOSED_PORT}:80
    depends_on:
      - db