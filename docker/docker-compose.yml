version: "3.7"
services:
  nginx:
    image: nginx:1.15.3-alpine
    depends_on:
      - php
    volumes:
      - ../public/:/usr/src/app
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - 9000:80
    networks:
      public_net:
        ipv4_address: ${APACHE_IP}

  db:
    container_name: ${COMPOSE_PROJECT_NAME}_db
    build:
      context: ./mysql
      args:
        - MYSQL_CONTAINER_USER=${MYSQL_CONTAINER_USER}
        - MYSQL_CONTAINER_GROUP=${MYSQL_CONTAINER_GROUP}
    volumes:
      - ./logs/mysql:${MYSQL_LOG_DIR}
      - ./database:${MYSQL_DATA_DIR}
      - ./mysql/config.cnf:${MYSQL_CONF_FILE}
    networks:
      public_net:
        ipv4_address: ${MYSQL_IP}
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    entrypoint: ""
    command: bash -c "chown -R mysql:mysql /var/log/mysql && exec /entrypoint.sh mysqld"

  php:
    build:
      context: .
      dockerfile: ./php/Dockerfile
    restart: on-failure
    env_file:
      - .env
    user: 1000:1000
    volumes:
      - ../:/usr/src/app
    networks:
      public_net:
        ipv4_address: ${PHP_IP}

  composer:
    image: composer
    volumes:
      - "../:/composer"
    container_name: composer
    working_dir: /composer
    command: install

  node:
    build:
      context: ./node
      args:
        - NODE_ENV=${NODE_ENV}
    volumes:
      - "../:/node"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_PORT: 3306
      PMA_HOST: db
      PMA_USER: ${MYSQL_ROOT_USER}
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - ${PMA_EXPOSED_PORT}:80
    depends_on:
      - db
    networks:
      - public_net

#  mediatheque:
#    build:
#      context: ./mediatheque
#    depends_on:
#      - php
#      - composer
#      - db
#    networks:
#      - public_net
#    volumes:
#      - ../:/mediatheque

networks:
  public_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${NETWORK_SUBNET}